{"ast":null,"code":"var _jsxFileName = \"/Users/mismlhuillier/Desktop/react-advanced-2020/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\"; // reducer function\n\nconst reducer = (state, action) => {\n  console.log(state, action);\n\n  if (action.type === \"ADD_PERSON\") {\n    const newPeople = [...state.people, action.payload];\n    return { ...state,\n      people: newPeople,\n      isModalOpen: true,\n      modalContent: \"item added\"\n    };\n  }\n\n  if (action.type === \" NO_VAlUE\") {\n    return { ...state,\n      isModalOpen: true,\n      modalContent: \"please enter value\"\n    };\n  } // throw new Error(\"no matching action type\");\n\n};\n\nconst defaultState = {\n  people: [],\n  isModalOpen: true,\n  modalContent: \"\"\n};\n\nconst Index = () => {\n  const [name, setName] = useState(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState); // const [people, setPeople] = useState(data);\n  // const [showModal, setShowModal] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      const newPerson = {\n        id: new Date().getTime().toString(),\n        name\n      };\n      dispatch({\n        type: \"ADD_PERSON\",\n        payload: newPerson\n      }); // setShowModal(true);\n      // setPeople([...people, { id: new Date().getTime().toString(), name }]);\n\n      setName(\"\");\n    } else {\n      dispatch({\n        type: \"NO_VALUE\"\n      }); // setShowModal(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.isModalOpen && /*#__PURE__*/React.createElement(Modal, {\n    modalContent: state.modalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, \"add\")), state.people.map(person => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    }, person.name));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/mismlhuillier/Desktop/react-advanced-2020/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","reducer","state","action","console","log","type","newPeople","people","payload","isModalOpen","modalContent","defaultState","Index","name","setName","dispatch","handleSubmit","e","preventDefault","newPerson","id","Date","getTime","toString","target","value","map","person"],"mappings":"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","sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport Modal from \"./Modal\";\nimport { data } from \"../../../data\";\n// reducer function\n\nconst reducer = (state, action) => {\n  console.log(state, action);\n  if (action.type === \"ADD_PERSON\") {\n    const newPeople = [...state.people, action.payload];\n    return {\n      ...state,\n      people: newPeople,\n      isModalOpen: true,\n      modalContent: \"item added\",\n    };\n  }\n  if (action.type === \" NO_VAlUE\") {\n    return { ...state, isModalOpen: true, modalContent: \"please enter value\" };\n  }\n  // throw new Error(\"no matching action type\");\n};\nconst defaultState = {\n  people: [],\n  isModalOpen: true,\n  modalContent: \"\",\n};\nconst Index = () => {\n  const [name, setName] = useState(\"\");\n  const [state, dispatch] = useReducer(reducer, defaultState);\n  // const [people, setPeople] = useState(data);\n  // const [showModal, setShowModal] = useState(false);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name) {\n      const newPerson = { id: new Date().getTime().toString(), name };\n      dispatch({ type: \"ADD_PERSON\", payload: newPerson });\n      // setShowModal(true);\n      // setPeople([...people, { id: new Date().getTime().toString(), name }]);\n      setName(\"\");\n    } else {\n      dispatch({ type: \"NO_VALUE\" });\n      // setShowModal(true);\n    }\n  };\n  return (\n    <>\n      {state.isModalOpen && <Modal modalContent={state.modalContent} />}\n      <form onSubmit={handleSubmit} className=\"form\">\n        <div>\n          <input\n            type=\"text\"\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></input>\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n      {state.people.map((person) => {\n        return (\n          <div key={person.id}>\n            <h4>{person.name}</h4>\n          </div>\n        );\n      })}\n    </>\n  );\n};\n\nexport default Index;\n"]},"metadata":{},"sourceType":"module"}