{"ast":null,"code":"var _jsxFileName = \"/Users/mismlhuillier/Desktop/react-advanced-2020/src/tutorial/6-useReducer/setup/index.js\";\nimport React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data'; // reducer function\n\nconst reducer = (state, action) => {\n  console.log(state, action);\n\n  if (action.type === 'TESTING') {\n    return { ...state,\n      people: data,\n      isModelOpen: true,\n      modalContent: 'item added'\n    };\n  } // return state;\n\n\n  throw new Error('no matching action type');\n};\n\nconst defaultState = {\n  people: [],\n  isModelOpen: true,\n  modalContent: ''\n};\n\nconst Index = () => {\n  const [name, setName] = useState('');\n  const [state, dispatch] = useReducer(reducer, defaultState); // const [people, setPeople] = useState(data);\n  // const [showModal, setShowModal] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (name) {\n      dispatch({\n        type: 'TESTING'\n      }); // setShowModal(true);\n      // setPeople([...people, { id: new Date().getTime().toString(), name }]);\n      // setName('')\n    } else {\n      dispatch({\n        type: 'RANDOM'\n      }); // setShowModal(true);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, state.isModelOpen && /*#__PURE__*/React.createElement(Modal, {\n    modalContent: state.modalContent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: name,\n    onChange: e => setName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }, \"add\")), state.people.map(person => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: person.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    }, person.name));\n  }));\n};\n\nexport default Index;","map":{"version":3,"sources":["/Users/mismlhuillier/Desktop/react-advanced-2020/src/tutorial/6-useReducer/setup/index.js"],"names":["React","useState","useReducer","Modal","data","reducer","state","action","console","log","type","people","isModelOpen","modalContent","Error","defaultState","Index","name","setName","dispatch","handleSubmit","e","preventDefault","target","value","map","person","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,SAASC,IAAT,QAAqB,eAArB,C,CACA;;AAEA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ,EAAmBC,MAAnB;;AACA,MAAIA,MAAM,CAACG,IAAP,KAAgB,SAApB,EAA+B;AAC7B,WAAO,EAAC,GAAGJ,KAAJ;AAAUK,MAAAA,MAAM,EAACP,IAAjB;AAAuBQ,MAAAA,WAAW,EAAC,IAAnC;AAAwCC,MAAAA,YAAY,EAAC;AAArD,KAAP;AACD,GAJgC,CAKjC;;;AACA,QAAM,IAAIC,KAAJ,CAAW,yBAAX,CAAN;AACD,CAPD;;AASA,MAAMC,YAAY,GAAG;AACnBJ,EAAAA,MAAM,EAAE,EADW;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,YAAY,EAAC;AAHM,CAArB;;AAKA,MAAMG,KAAK,GAAG,MAAM;AAClB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQa,QAAR,IAAoBjB,UAAU,CAACG,OAAD,EAASU,YAAT,CAApC,CAFkB,CAGlB;AACA;;AACA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIL,IAAJ,EAAU;AACRE,MAAAA,QAAQ,CAAC;AAACT,QAAAA,IAAI,EAAC;AAAN,OAAD,CAAR,CADQ,CAER;AACA;AACA;AACD,KALD,MAKO;AACLS,MAAAA,QAAQ,CAAC;AAACT,QAAAA,IAAI,EAAE;AAAP,OAAD,CAAR,CADK,CAEL;AACD;AACF,GAXD;;AAYA,sBACE,0CACGJ,KAAK,CAACM,WAAN,iBAAqB,oBAAC,KAAD;AAAO,IAAA,YAAY,EAAEN,KAAK,CAACO,YAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADxB,eAEE;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAA8B,IAAA,SAAS,EAAC,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,KAAK,EAAEH,IAFT;AAGE,IAAA,QAAQ,EAAGI,CAAD,IAAOH,OAAO,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WARF,CAFF,EAYGlB,KAAK,CAACK,MAAN,CAAac,GAAb,CAAkBC,MAAD,IAAU;AAC1B,wBACE;AAAK,MAAA,GAAG,EAAEA,MAAM,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,MAAM,CAACT,IAAZ,CADF,CADF;AAKD,GANA,CAZH,CADF;AAsBG,CAvCL;;AAyCI,eAAeD,KAAf","sourcesContent":["import React, { useState, useReducer } from 'react';\nimport Modal from './Modal';\nimport { data } from '../../../data';\n// reducer function\n\nconst reducer = (state, action) => {\n  console.log(state, action);\n  if (action.type === 'TESTING') {\n    return {...state,people:data, isModelOpen:true,modalContent:'item added'}\n  }\n  // return state;\n  throw new Error ('no matching action type')\n}\n\nconst defaultState = {\n  people: [],\n  isModelOpen: true,\n  modalContent:''\n}\nconst Index = () => {\n  const [name, setName] = useState('');\n  const [state, dispatch] = useReducer(reducer,defaultState);\n  // const [people, setPeople] = useState(data);\n  // const [showModal, setShowModal] = useState(false);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (name) {\n      dispatch({type:'TESTING'})\n      // setShowModal(true);\n      // setPeople([...people, { id: new Date().getTime().toString(), name }]);\n      // setName('')\n    } else {\n      dispatch({type: 'RANDOM'})\n      // setShowModal(true);\n    }\n  };\n  return (\n    <>\n      {state.isModelOpen && <Modal modalContent={state.modalContent} />}\n      <form onSubmit={handleSubmit} className='form'>\n        <div>\n          <input\n            type='text'\n            value={name}\n            onChange={(e) => setName(e.target.value)}\n          ></input>\n        </div>\n        <button type=\"submit\">add</button>\n      </form>\n      {state.people.map((person)=>{\n        return (\n          <div key={person.id}>\n            <h4>{person.name}</h4>\n          </div>\n        )\n      })}\n    </>\n  );\n    };\n\n    export default Index;\n"]},"metadata":{},"sourceType":"module"}